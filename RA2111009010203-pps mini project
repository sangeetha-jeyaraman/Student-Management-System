/*STUDENT MANAGEMENT SYSTEM-RA2111009010203*/
#include<stdio.h>
#include<string.h>
#include<math.h>
#include<stdlib.h>
int i=0;
struct stinfo
{
  char fname[20];
  char lname[20]; char gender[10]; 
  int rollno; char phoneno[10]; char add[50];
  int courseid[10];
  float CGPA;
};
struct stinfo st[30];
void add_student ()
{ 
  printf("Enter the student details:\n");
  printf("Enter the student's first name:\n");
  scanf("%s", st[i].fname);
  printf("Enter the student's last name:\n");
  scanf("%s", st[i].lname);
  printf("Enter the student's gender:\n");
  scanf("%s",st[i].gender);
  printf("Enter the student's roll number:\n");
  scanf("%d", &st[i].rollno);
  printf("Enter student's contact number:\n");
  scanf("%s", st[i].phoneno);
  printf("Enter student's address:\n");
  scanf("%s", st[i].add);
  printf("Enter the course ID of each course chosen by student:\n");
  int j;
  for(j=0;j<5;j++)
    {
      scanf("%d",&st[i].courseid[j]);
    }
  printf("Enter the student's CGPA:\n");
  scanf("%f", &st[i].CGPA);
  i=i+1;
}

void find_with_rn()
{
  int rn,j;
  printf("Enter the student's roll number:\n");
  scanf("%d", &rn);
  for (j=1;j<=i;j++)
    {
      if(rn==st[i].rollno)
	{
	  printf("The student's details are:\n");
	  printf("Student's first name: %s\n", st[i].fname);
	  printf("Student's last name: %s\n", st[i].lname);
	  printf("Student's gender: %s\n", st[i].gender);
	  printf("Student's roll number: %d\n", st[i].rollno);
	  printf("Student's contact number: %s\n", st[i].phoneno);
	  printf("Student's address: %s\n", st[i].add);
	  printf("Course ID of each course chosen by student:\n");
	  for (j=0;j<5;j++)
	    {
	      printf("%d\n", st[i].courseid[j]);
	    }
	  printf("Student's CGPA: %.2f\n", st[i].CGPA);
	}
    }}
void find_with_fn()
{
  char fn[20]; int j;
  printf("Enter the student's first name:\n");
  scanf("%s", fn); int c=0;
  for (j=1;j<=i;j++)
    {
      if((strcmp(st[j].fname,fn))==0)
	{
	  printf("The student's details are:\n");
	  printf("Student's first name: %s\n", st[i].fname);
	  printf("Student's last name: %s\n", st[i].lname);
	  printf("Student's gender: %s\n", st[i].gender);
	  printf("Student's roll number: %d\n", st[i].rollno);
	  printf("Student's contact number: %s\n", st[i].phoneno);
	  printf("Student's address: %s\n", st[i].add);
	  printf("Course ID of each course chosen by student:\n");
	  for (j=0;j<5;j++)
	    {
	      printf("%d\n", st[i].courseid[j]);
	    }
	  printf("Student's CGPA: %.2f\n", st[i].CGPA); c=1; 
	} else printf("First name not found\n");
    }}
void find_with_cid()
{
  int cid,j,d;
  printf("Enter the course ID:\n");
  scanf("%d", &cid);
  for (j=1;j<=i;j++){
      for (d=0;d<5;d++)
    {
      if(cid==st[j].courseid[d])
	{
	  printf("The student's details are:\n");
	  printf("Student's first name: %s\n", st[i].fname);
	  printf("Student's last name: %s\n", st[i].lname);
	  printf("Student's gender: %s\n", st[i].gender);
	  printf("Student's roll number: %d\n", st[i].rollno);
	  printf("Student's contact number: %s\n", st[i].phoneno);
	  printf("Student's address: %s\n", st[i].add);
	  printf("Course ID of each course chosen by student:\n");
	  for (j=0;j<5;j++)
	    {
	      printf("%d\n", st[i].courseid[j]);
	    }
	  printf("Student's CGPA: %.2f\n", st[i].CGPA);
	}
    }}}
void update_std()
{
     int rn; int j;
    printf("Enter the roll number of the student for update:\n");
    scanf("%d",&rn);
    for (j=1;j<=i;j++){
        if(st[j].rollno==rn){
            printf("1.First name\n2.Last name\n3.Gender\n4.Roll number\n5.Contact number\n6.Address\n7.Courses\n8.CGPA\n");
            printf("Choice:\n"); int new;
            scanf("%d",&new);
            switch(new){
                case 1:
                printf("Enter the new first name:\n");
                scanf("%s",st[i].fname);
                break;
                case 2:
                printf("Enter the new last name:\n");
                scanf("%s",st[i].lname);
                break;
                case 3:
                printf("Enter the new gender:\n");
                scanf("%s",st[i].gender);
                break;
                case 4:
                printf("Enter the new roll number:\n");
                scanf("%d",&st[i].rollno);
                break;
                case 5:
                printf("Enter the contact number:\n");
                scanf("%s",st[i].phoneno);
                break;
                case 6:
                printf("Enter the address:\n");
                scanf("%s",st[i].add);
                break;
                case 7:
                printf("Enter the new course IDs:\n");
                scanf("%d\n%d\n%d\n%d\n%d\n",st[0].courseid,st[1].courseid,st[2].courseid,st[3].courseid,st[4].courseid);
                break;
                case 8:
                printf("Enter the new CGPA:\n");
                scanf("%f",&st[i].CGPA);
                break;
                
                
            }
                printf("Update successful\n");
            }
        }
    }
void delete_std()
{
 int rn,j,k;
 printf("Enter the roll number of the student:\n");
 scanf("%d",&rn);
 for(j=1;j<=i;j++){
     if(st[j].rollno==rn){
         for(k=j;k<49;k++)
         st[k]=st[k+1];
         i--; printf("Student's details removed successfully\n");
     } else printf("The roll number didn't exist before\n");
 }
 //printf("Student's details removed successfully\n");
}
void main()
{
    int choice,count;
    while(i=1){printf("\nMAIN MENU\n");
    printf("\nSelect the task you would like to do\n");
    printf("1.Add student's details\n");
    printf("2.Find student's details through roll number\n");
    printf("3.Find student's details through first name\n");
    printf("4.Find student's details through course ID\n");
    printf("5.Update student's details\n");
    printf("6.Delete student's details\n");
    printf("7.Exit\n");
    printf("Choice:\n");
    scanf("%d",&choice);
    switch(choice){
        case 1:
        add_student (); count++;
        break;
        case 2:
        find_with_rn();
        break;
        case 3:
        find_with_fn();
        break;
        case 4:
        find_with_cid();
        break;
        case 5:
        update_std();
        break;
        case 6:
        delete_std();
        break;
        case 7:
        exit(0);
        break;
    }
}
}
